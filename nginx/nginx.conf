# Configuraci√≥n global
worker_processes auto;
events {
    worker_connections 1024;
}

http {
    # Limitar la tasa de solicitudes para proteger contra DDoS
    limit_req_zone $binary_remote_addr zone=mylimit:10m rate=10r/s;
    # Removes NGINX version/info in request
    server_tokens off;
    # Adds mime types to be able to serve css and others
    include       mime.types;
    default_type  application/octet-stream;
    # Security configuration
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
    #add_header Content-Security-Policy "default-src 'self';";
    #add_header Content-Security-Policy "default-src *;";
    add_header X-Content-Type-Options "nosniff";
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";

    # SSL Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;


    server {
        listen [::]:80;
        listen 80;

        # Configura la URL del dominio que va a recibir la solicitud
        server_name api.bryanstgarcia.com www.api.bryanstgarcia.com;
        
        #Letsncrypt cetbot challenge
        location ~ /.well-known/acme-challenge/ {
            allow all;
            root /var/www/certbot;
        }
        # Redirects from http to https
        return 301 https://$host$request_uri;

    }

    server {
        # Listen HTTPS
        listen 443 ssl;
        http2 on;
        server_name api.bryanstgarcia.com;

        # SSL config
        ssl_certificate /etc/letsencrypt/live/api.bryanstgarcia.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/api.bryanstgarcia.com/privkey.pem;

        location / {
            limit_req zone=mylimit burst=10;
            # Proxy pass:  Indica el contenedor y el puerto que va a recibir el dominio
            # Ejemplo: http://nombre-de-contendor:puerto/ruta
            # proxy_pass http://cms-strapi-production:1337/admin;
            #proxy_pass http://127.0.0.1:2000/; #Same container; has a server running in 2000 port

            proxy_pass http://cms-strapi-production:1337/;
            proxy_http_version 1.1;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Server $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $host;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_pass_request_headers on;
        }

        location /hello/ {
            proxy_pass http://127.0.0.1:2000/;
            proxy_http_version 1.1;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Server $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $host;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_pass_request_headers on;
        }

        location /main/css/ {
            alias /usr/share/nginx/main/;
        }
    }

    server {
        listen 2000;
        server_name mainserver;

        location / {
            root /usr/share/nginx/main/;
            try_files $uri $uri/ =404;
        }
    }
}

