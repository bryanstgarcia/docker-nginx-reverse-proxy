server {
    listen 2000;
    server_name mainserver;
    server_tokens off;

    location / {
        root /usr/share/nginx/main/;
        try_files $uri $uri/ =404;
    }
}

server {
    listen [::]:80;
    listen 80;
    server_tokens off;

    # Configura la URL del dominio que va a recibir la solicitud
    server_name api.bryanstgarcia.com www.api.bryanstgarcia.com;
    
    #Letsncrypt cetbot challenge
    location ~ /.well-known/acme-challenge/ {
        allow all;
        root /var/www/certbot;
    }
    # Redirects from http to https
    return 301 https://$host$request_uri;

}

server {
    # Listen HTTPS
    listen 443 ssl http2;
    server_name api.bryanstgarcia.com;
    server_tokens off;
    # Bloquea agentes de usuario autom√°ticos
    if ($http_user_agent ~* LWP::Simple|BBBike|wget) {
        return 403;
    }
    # SSL config
    ssl_certificate /etc/letsencrypt/live/api.bryanstgarcia.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.bryanstgarcia.com/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
    add_header Content-Security-Policy "default-src 'self'";
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options "SAMEORIGIN";

    location / {
        # Proxy pass:  Indica el contenedor y el puerto que va a recibir el dominio
        # Ejemplo: http://nombre-de-contendor:puerto/ruta
        # proxy_pass http://cms-strapi-production:1337/admin;
        proxy_pass http://127.0.0.1:2000/; # Same container; has a server running in 2000 port
        proxy_http_version 1.1;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Cookie "path=/; HttpOnly; Secure";
        proxy_pass_request_headers on;
    }

    location /cms {
        #proxy_pass http://cms-strapi-production:1337/admin;
        proxy_pass http://127.0.0.1:2000/;
        proxy_http_version 1.1;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_pass_request_headers on;
    }

    location /hello {
        proxy_pass http://127.0.0.1:2000/;
        proxy_http_version 1.1;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_pass_request_headers on;
    }

    location /main/css {
        alias /usr/share/nginx/main;
    }

    # Proxy Config STRAPI
    #location / {
    #    proxy_pass http://strapi;
    #    proxy_http_version 1.1;
    #    proxy_set_header X-Forwarded-Host $host;
    #    proxy_set_header X-Forwarded-Server $host;
    #    proxy_set_header X-Real-IP $remote_addr;
    #    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #    proxy_set_header X-Forwarded-Proto $scheme;
    #    proxy_set_header Host $http_host;
    #    proxy_set_header Upgrade $http_upgrade;
    #    proxy_set_header Connection "Upgrade";
    #    proxy_pass_request_headers on;
    #}
}


#CHECK THE ERROR ON THE LOG OF THE CONtaINER . FILE NOT FOUND